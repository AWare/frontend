$fc-item-gutter: $gs-gutter / 3;

@import 'item-layouts/fc-item--standard';
@import 'item-layouts/fc-item--list';
@import 'item-layouts/fc-item--list-media';
@import 'item-layouts/fc-item--list-media-large';

.fc-show-more--hidden .fc-show-more__hide-on-mobile {
    @include mq($until: tablet) {
        display: none !important;
    }
}

.fc-show-more--hidden .fc-show-more__hide {
    display: none !important;
}

.fc-container {
    .facia-slice__item {
        @include flex-display;
        padding-bottom: 0;

        @if not $browser-supports-flexbox {
            width: 25%;
        }
    }
}

.fc-item {
    @include flex(1);
    padding-bottom: $gs-baseline * 2.5;
    margin-left: $gs-gutter * .5;
    margin-right: $gs-gutter * .5;
    background-color: #ffffff;
    display: block;
    position: relative;

    .stars {
        margin-top: $gs-baseline * .25;

        @include mq(tablet) {
            margin-bottom: $gs-baseline * 1.25;
        }
    }
}

.fc-item__image-container {
    .js-off & {
        display: none;
    }
}

.fc-item__media-wrapper,
.fc-item__image-container {
    display: none;

    .fc-item--has-image & {
        display: block;

        .js-off & {
            display: none !important;
        }
    }
}

.fc-item__media-wrapper {
    position: relative;
}

.fc-item__header,
.fc-item__standfirst,
.fc-item__meta {
    padding-left: $fc-item-gutter;
    padding-right: $fc-item-gutter;
}

.fc-item__live-indicator {
    background-color: #ffffff;
    color: $c-live;
    font: inherit;
    line-height: 1;
    text-transform: capitalize;
    padding: .1em .2em .05em;
}

.fc-item__title {
    padding-top: $gs-baseline / 3;
    padding-bottom: 0;
    @include fs-headline(2);
    word-wrap: break-word;
}

.fc-item__byline {
    margin-bottom: 0;
}

.fc-item__standfirst {
    @include fs-bodyCopy(1);
    display: none;
}

.fc-item__meta {
    position: absolute;
    bottom: 0;
    padding-top: $gs-baseline / 3;
    padding-bottom: $gs-baseline / 3;
    @include fs-textSans(1);
}

.fc-item__timestamp,
.fc-trail__count {
    position: relative;
    float: left;
}

.fc-item__timestamp {
    display: none;
}

.fc-trail__count--inline-template {
    display: none;
}

.fc-item--has-cutout {
    padding-bottom: 60%;

    .fc-item__media-wrapper {
        display: none;
    }

    .fc-item__avatar {
        position: absolute;
        overflow: hidden;
        width: 80%;
        bottom: 0 - $gs-baseline / 2;
        right: $gs-gutter / 2;
    }

    .fc-item__avatar__media {
        position: relative;
        width: 100%;
        right: 0 - $gs-gutter * 2;
    }
}

.fc-item--list-mobile {
    @include mq($until: tablet) {
        @include fc-item--list;
    }
}

.fc-item--list-tablet {
    @include mq(tablet) {
        @include fc-item--list;
    }
}

.fc-item--list-media-mobile {
    @include mq($until: tablet) {
        @include fc-item--list-media;
    }
}

.fc-item--list-media-tablet {
    @include mq(tablet) {
        @include fc-item--list-media;
    }
}

.fc-item--list-media-large-mobile {
    @include mq($until: tablet) {
        @include fc-item--list-media-large;
    }
}

.fc-item--list-media-large-tablet {
    @include mq(tablet) {
        @include fc-item--list-media-large;
    }
}

.fc-item--standard {
    @include mq($until: tablet) {
        @include fc-item--standard;
    }
}

.fc-item--standard-tablet {
    @include mq(tablet) {
        @include fc-item--standard;
    }
}


.l-list {
    float: left;

    .has-flex-wrap & {
        @include flex-display;
        @include flex-wrap(wrap);
    }
}

.l-list__item {
    float: left;

    &:last-child {
        margin-bottom: 0;
    }

    .has-flex-wrap & {
        @include flex-grow(0);
        @include flex-basis(100%);
    }
}

@for $column from 1 through 4 {
    .l-row__item--span-#{$column} {
        @include flex(#{$column});
    }

    .l-list--columns-#{$column} {
        .l-list__item {
            @include mq(tablet) {
                width: 100% / $column;

                &:nth-child(#{$column}n+1) {
                    clear: both;

                    &:before {
                        border: 0;
                    }
                }
            }

            .has-flex-wrap & {
                @include mq(tablet) {
                    @include flex-basis(100% / $column);
                }
            }
        }

        @for $row from 1 through 4 {
            &.l-list--rows-#{$row} {
                .l-list__item:nth-last-child(-n+#{$column}) {
                    @include mq(tablet) {
                        margin-bottom: 0;
                    }
                }
            }
        }
    }
}
